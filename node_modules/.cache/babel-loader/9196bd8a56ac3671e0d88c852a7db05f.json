{"ast":null,"code":"import _classPrivateFieldLooseKey from \"/Users/laurenwright/Dev/lmw-gui-components/node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js\";\n\nvar _jsxFileName = \"/Users/laurenwright/Dev/lmw-gui-components/src/lib/components/NavBar.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport \"./styles/NavBar.css\";\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/icons-material/Menu';\nimport Paper from '@mui/material/Paper';\nimport Popover from '@mui/material/Popover';\nimport { WatchableSubject, Watchable, useWatchable } from '@shortwave/watchable'; // Class counter example for React, but using Watchables (which is overkill here, but hey it's an example!)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _state = /*#__PURE__*/_classPrivateFieldLooseKey(\"state\");\n\nclass ToggleService {\n  constructor() {\n    Object.defineProperty(this, _state, {\n      writable: true,\n      value: WatchableSubject.of(false)\n    });\n  }\n\n  // Return a Watchable here as it's the readonly version.\n  value() {\n    return this.state;\n  }\n\n  toggle() {\n    this.state.update(!this.state.getValue());\n  }\n\n}\n\nconst NavBar = props => {\n  _s();\n\n  //service is type CounterService. Any time our component changes its rerendered because Memo is a hook. however\n  const service = React.useMemo(() => new ToggleService(), []);\n  const value = useWatchable(service.value());\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = event => {\n    console.log(\"current target: \", event.currentTarget);\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"navigation\",\n    style: {\n      backgroundColor: props.backgroundColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        style: {\n          color: props.fontColor\n        },\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: [/*#__PURE__*/_jsxDEV(Menu, {\n        ref: anchorEl,\n        onClick: handleClick,\n        sx: {\n          fontSize: 30,\n          color: props.fontColor\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        id: id,\n        open: open,\n        anchorEl: anchorEl,\n        onClose: handleClose,\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 6,\n          children: /*#__PURE__*/_jsxDEV(MenuList, {\n            style: {},\n            children: props.links.map(linkObj => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"link-items\",\n                  style: {\n                    color: props.fontColor\n                  },\n                  to: linkObj.path,\n                  children: linkObj.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NavBar, \"SqCwg7NOAu5yBcIr4zbN+OYMFA8=\", false, function () {\n  return [useWatchable];\n});\n\n_c = NavBar;\nNavBar.propTypes = {\n  name: PropTypes.string,\n  links: PropTypes.arrayOf(Object),\n  backgroundColor: PropTypes.string,\n  fontColor: PropTypes.string\n};\nNavBar.defaultProps = {\n  name: \"Lauren Wright\",\n  link: [{\n    title: \"Home\",\n    path: \"/\"\n  }],\n  backgroundColor: \"white\",\n  fontColor: \"black\"\n};\nexport default NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/laurenwright/Dev/lmw-gui-components/src/lib/components/NavBar.js"],"names":["React","PropTypes","Link","MenuList","MenuItem","Menu","Paper","Popover","WatchableSubject","Watchable","useWatchable","ToggleService","of","value","state","toggle","update","getValue","NavBar","props","service","useMemo","anchorEl","setAnchorEl","useState","handleClick","event","console","log","currentTarget","handleClose","open","Boolean","id","undefined","backgroundColor","color","fontColor","name","fontSize","vertical","horizontal","links","map","linkObj","path","title","propTypes","string","arrayOf","Object","defaultProps","link"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport \"./styles/NavBar.css\"\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\nimport MenuList from '@mui/material/MenuList';\nimport MenuItem from '@mui/material/MenuItem';\nimport Menu from '@mui/icons-material/Menu'\nimport Paper from '@mui/material/Paper';\nimport Popover from '@mui/material/Popover';\nimport { WatchableSubject, Watchable, useWatchable } from '@shortwave/watchable';\n\n// Class counter example for React, but using Watchables (which is overkill here, but hey it's an example!)\nclass ToggleService {\n  #state = WatchableSubject.of(false);\n\n  // Return a Watchable here as it's the readonly version.\n  value() {\n    return this.state;\n  }\n\n  toggle() {\n    this.state.update(!this.state.getValue());\n  }\n}\n\n\nconst NavBar = (props) => {\n  //service is type CounterService. Any time our component changes its rerendered because Memo is a hook. however\n  const service = React.useMemo(() => new ToggleService(), []);\n  const value = useWatchable(service.value());\n\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    console.log(\"current target: \", event.currentTarget)\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  return (\n\n    <header className=\"navigation\" style={{ backgroundColor: props.backgroundColor }}>\n      <div className=\"left\">\n        <a style={{ color: props.fontColor }}>{props.name}</a>\n      </div>\n      <div className=\"right\">\n        <Menu\n          ref={anchorEl}\n          onClick={handleClick}\n          sx={{ fontSize: 30, color: props.fontColor }}\n        />\n\n        <Popover\n          id={id}\n          open={open}\n          anchorEl={anchorEl}\n          onClose={handleClose}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'left',\n          }}\n        >\n          <Paper elevation={6}>\n            <MenuList style={{}}>\n              {props.links.map((linkObj) => {\n                return (\n                  <MenuItem>\n                    <Link className=\"link-items\" style={{ color: props.fontColor }} to={linkObj.path}>{linkObj.title}</Link>\n                  </MenuItem>\n                )\n              })}\n            </MenuList>\n          </Paper>\n        </Popover>\n\n      </div>\n    </header>\n  );\n\n}\nNavBar.propTypes = {\n  name: PropTypes.string,\n  links: PropTypes.arrayOf(Object),\n  backgroundColor: PropTypes.string,\n  fontColor: PropTypes.string\n}\n\nNavBar.defaultProps = {\n  name: \"Lauren Wright\",\n  link: [\n    {\n      title: \"Home\",\n      path: \"/\"\n    }],\n  backgroundColor: \"white\",\n  fontColor: \"black\"\n}\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}