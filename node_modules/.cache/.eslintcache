[{"/Users/laurenwright/Dev/lmw-gui-components/src/index.js":"1","/Users/laurenwright/Dev/lmw-gui-components/src/App.js":"2","/Users/laurenwright/Dev/lmw-gui-components/src/lib/index.js":"3","/Users/laurenwright/Dev/lmw-gui-components/src/lib/components/NavBar.js":"4"},{"size":198,"mtime":1641960507325,"results":"5","hashOfConfig":"6"},{"size":1026,"mtime":1641961238126,"results":"7","hashOfConfig":"6"},{"size":60,"mtime":1641959708682,"results":"8","hashOfConfig":"6"},{"size":685,"mtime":1641961414215,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1mf794v",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"/Users/laurenwright/Dev/lmw-gui-components/src/index.js",[],["21","22"],"/Users/laurenwright/Dev/lmw-gui-components/src/App.js",[],["23","24"],"/Users/laurenwright/Dev/lmw-gui-components/src/lib/index.js",[],"/Users/laurenwright/Dev/lmw-gui-components/src/lib/components/NavBar.js",["25"],"import * as React from 'react';\nimport \"./styles/NavBar.css\"\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\n\n\nconst NavBar =(props) => {\n  return (\n\n    <header className=\"navigation\">\n      <div className=\"left\">\n        <a>{props.name}</a>\n      </div>\n      <div className=\"right\">\n        <ul className=\"nav-options\">\n        {props.links.map((linkObj) => {\n          return (\n            <li>\n              <Link to={linkObj.path}>{linkObj.title}</Link>\n            </li>\n          )\n        })}\n        </ul>\n      </div>\n    </header>\n  );\n}\nNavBar.propTypes = {\n  name: PropTypes.string,\n  links: PropTypes.arrayOf(Object)\n}\nexport default NavBar;",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"26","replacedBy":"30"},{"ruleId":"28","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":12,"column":9,"nodeType":"34","endLine":12,"endColumn":12},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],["35"],["36"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]